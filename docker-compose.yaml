version: "3.7"

networks:
  training-network:
    driver: bridge

services:
  api.pokemon:
    container_name: training-api.pokemon.local
    build:
      context: backend/api.pokemon
      dockerfile: Dockerfile
    environment:
      - VHOST_HOSTNAME=api.pokemon.local
      - VHOST_DOCROOT=/var/www/html/api.pokemon/
    ports:
      - "19180:80"
      - "19143:443"
    volumes:
      - ./backend/api.pokemon/:/var/www/html/api.pokemon/
    networks:
      - training-network
    links:
      - mongo.pokemon:pokemon

  front-end:
    container_name: training-front-end
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    ports:
      - "8081:8080"
    networks:
      - training-network

  api.forum:
    container_name: training-api.forum.local
    build:
      context: backend/api.forum
      dockerfile: Dockerfile
    environment:
      - VHOST_HOSTNAME=api.forum.local
      - VHOST_DOCROOT=/var/www/html/api.forum/public/
    ports:
      - "19280:80"
      - "19243:443"
    volumes:
      - ./backend/api.forum/:/var/www/html/api.forum/
    networks:
      - training-network
    links:
      - postgres.forum:dbcat

  #############################
  # databases
  #############################
  mongo.pokemon:
    image: mongo:latest
    container_name: mongo.pokemon
    volumes:
      - ./backend/api.pokemon/resources/seeds/:/var/data
    working_dir: /var/data
    networks:
      - training-network
    ports:
      - 27018:27017

  postgres.forum:
    image: postgres:alpine
    restart: always
    container_name: postgres.forum
    environment:
      POSTGRES_USER: forum
      POSTGRES_PASSWORD: forum
      POSTGRES_DB: forum
    networks:
      - training-network
    ports:
      - 5433:5432